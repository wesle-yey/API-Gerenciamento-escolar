name: CI/CD Pipeline - Sistema de Gerenciamento Escolar

on:
  push:
    branches: [main, develop, autenticacao]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Executar Testes Básicos
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Instalar dependências básicas
        run: |
          python -m pip install --upgrade pip
          pip install fastapi uvicorn pytest

      - name: Teste básico de importação
        run: |
          python -c "import fastapi; print('✅ FastAPI importado com sucesso')"
          python -c "import uvicorn; print('✅ Uvicorn importado com sucesso')"
          python -c "import pytest; print('✅ Pytest importado com sucesso')"

      - name: Teste de sintaxe
        run: |
          python -m py_compile main.py
          echo "✅ Sintaxe do main.py está correta"

  build:
    name: Build Docker
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: |
          docker build -t app:latest .
          echo "✅ Docker build concluído"

  notify:
    name: Status Final
    runs-on: ubuntu-latest
    needs: [test, build]
    if: always()
    steps:
      - name: Status dos Jobs
        run: |
          echo "📊 Status dos Jobs:"
          echo "🧪 Testes: ${{ needs.test.result }}"
          echo "🐳 Build: ${{ needs.build.result }}"
          
          if [ "${{ needs.test.result }}" == "success" ]; then
            echo "✅ Pipeline executada com sucesso!"
          else
            echo "❌ Pipeline falhou!"
            exit 1
          fi